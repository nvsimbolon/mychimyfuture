leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
# fillColor= ~pal(percentage),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$percentage,
opacity = 0.7,
title = "% 'small'",
position = "topright"
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
# fillColor= ~pal(percentage),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
# values = leaflet_dat$percentage,
opacity = 0.7,
title = "% 'small'",
position = "topright"
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
# fillColor= ~pal(percentage),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
)
library(RColorBrewer)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
)
pal <- colorBin("YlOrRd", domain = leaflet_dat$percentage, bins = bins)
pal <- colorBin("YlOrRd", domain = leaflet_dat$`Capacity Per Capita`, bins = bins)
bins <- c(0, 25, 50, 75, 100)
pal <- colorBin("YlOrRd", domain = leaflet_dat$`Capacity Per Capita`, bins = bins)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "% 'small'",
position = "topright"
)
View(dat)
bins <- quantile(leaflet_dat$`Capacity Per Capita`, probs = c(0.25, 0.5, 0.75))
pal <- colorBin("YlOrRd", domain = leaflet_dat$`Capacity Per Capita`, bins = bins)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "% 'small'",
position = "topright"
)
leaflet_dat <- dat %>%
group_by(`Geographic Cluster Name`) %>%
select(`Geographic Cluster Name`, `Capacity Per Capita`, geometry) %>%
mutate(label = paste0(`Geographic Cluster Name`, ": ", `Capacity Per Capita`)) %>%
distinct() %>%
ungroup() %>%
st_as_sf()
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "% 'small'",
position = "topright"
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
# label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "Capacity Per Capita",
position = "topright"
)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "Capacity Per Capita",
position = "topright"
)
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(`Geographic Cluster Name` = tools:toTitle(`Geographic Cluster Name`))
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(`Geographic Cluster Name` = tools::toTitle(`Geographic Cluster Name`))
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(`Geographic Cluster Name` = tools::toTitlecase(`Geographic Cluster Name`))
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(`Geographic Cluster Name` = tools::toTitleCase(`Geographic Cluster Name`))
View(dat)
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(`Geographic Cluster Name` = tools::toTitleCase(tolower(`Geographic Cluster Name`)))
leaflet_dat <- dat %>%
group_by(`Geographic Cluster Name`) %>%
select(`Geographic Cluster Name`, `Capacity Per Capita`, geometry) %>%
mutate(label = paste0(`Geographic Cluster Name`, ": ", `Capacity Per Capita`)) %>%
distinct() %>%
ungroup() %>%
st_as_sf()
bins <- quantile(leaflet_dat$`Capacity Per Capita`, probs = c(0.25, 0.5, 0.75))
pal <- colorBin("YlOrRd", domain = leaflet_dat$`Capacity Per Capita`, bins = bins)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "Capacity Per Capita",
position = "topright"
)
View(leaflet_dat)
colnames(dat)
bins <- quantile(leaflet_dat$`Capacity Per Capita`, probs = c(0, 0.25, 0.5, 0.75, 1))
pal <- colorBin("YlOrRd", domain = leaflet_dat$`Capacity Per Capita`, bins = bins)
leaflet() %>%
setView(lng = -87.69, lat = 41.87, zoom = 10) %>%
addProviderTiles(
"OpenStreetMap",
group = "OpenStreetMap"
) %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB.Positron"
) %>%
addPolygons(
data = leaflet_dat,
fillColor= ~pal(`Capacity Per Capita`),
fillOpacity = 0.2,
color = "grey",
weight = 1.5,
label = leaflet_dat$label
) %>%
addScaleBar("bottomleft") %>%
addLegend(
pal = pal,
values = leaflet_dat$`Capacity Per Capita`,
opacity = 0.7,
title = "Capacity Per Capita",
position = "topright"
)
runApp('Desktop/GitHub/mychimyfuture/MCMF')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
shiny::runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
shiny::runApp('Desktop/GitHub/mychimyfuture')
merged_dat <- read_csv('Updated_Merged_Dataset.csv')
merged_dat <- read_csv('Updated_Merged_Dataset.csv')
runApp('Desktop/GitHub/mychimyfuture')
merged_dat <- read_csv('Updated_Merged_Dataset.csv')
library(tidyverse)
merged_dat <- read_csv('Updated_Merged_Dataset.csv')
merged_dat <- read_csv('/Users/joepopop/Desktop/GitHub/mychimyfuture/Updated_Merged_Dataset.csv')
View(merged_dat)
shiny::runApp('Desktop/GitHub/mychimyfuture')
shiny::runApp('Desktop/GitHub/mychimyfuture')
merged_dat <- read_csv('/Users/joepopop/Desktop/GitHub/mychimyfuture/Updated_Merged_Dataset.csv')
View(merged_dat)
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
shiny::runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
library(shiny)
library(tidyverse)
library(skimr)
library(sf)
library(leaflet)
library(RColorBrewer)
merged_dat <- read_csv('Updated_Merged_Dataset.csv')
merged_dat <- read_csv('/Users/joepopop/Desktop/GitHub/mychimyfuture/Updated_Merged_Dataset.csv')
View(merged_dat)
runApp('Desktop/GitHub/mychimyfuture')
library(tidyverse)
library(skimr)
library(sf)
library(leaflet)
library(RColorBrewer)
merged_dat <- read_csv('/Users/joepopop/Desktop/GitHub/mychimyfuture/Final_Merged_Dataset.csv')
View(merged_dat)
map_dat <- read_sf("https://raw.githubusercontent.com/thisisdaryn/data/master/geo/chicago/Comm_Areas.geojson") %>%
rename(community_area = community) %>%
mutate(
community_area = toupper(community_area),
community_area = case_when(
community_area == 'NEW CITY' ~ 'Back of the Yards',
community_area %in% c('DOUGLAS', 'GRAND BOULEVARD', 'OAKLAND') ~ 'Bronzeville/South Lakefront',
community_area %in% c('WEST GARFIELD PARK', 'EAST GARFIELD PARK') ~ 'GARFIELD PARK',
community_area == 'SOUTH LAWNDALE' ~ 'Little Village',
TRUE ~ community_area
))
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(
`Geographic Cluster Name` = tools::toTitleCase(tolower(`Geographic Cluster Name`)),
) %>%
mutate_at(vars(contains("Percent") | contains("Unemployment Rate")),
~as.numeric(sub("%|\\$|,", "", .))/100) %>%
janitor::clean_names() %>%
rename_all(~ str_to_title(str_replace_all(., "_", " ")))
View(dat)
shiny::runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
shiny::runApp('Desktop/GitHub/mychimyfuture')
shiny::runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
runApp('Desktop/GitHub/mychimyfuture')
library(shiny)
library(tidyverse)
library(skimr)
library(sf)
library(leaflet)
library(RColorBrewer)
merged_dat <- read_csv('Final_Merged_Dataset.csv')
map_dat <- read_sf("https://raw.githubusercontent.com/thisisdaryn/data/master/geo/chicago/Comm_Areas.geojson") %>%
rename(community_area = community) %>%
mutate(
community_area = toupper(community_area),
community_area = case_when(
community_area == 'NEW CITY' ~ 'Back of the Yards',
community_area %in% c('DOUGLAS', 'GRAND BOULEVARD', 'OAKLAND') ~ 'Bronzeville/South Lakefront',
community_area %in% c('WEST GARFIELD PARK', 'EAST GARFIELD PARK') ~ 'GARFIELD PARK',
community_area == 'SOUTH LAWNDALE' ~ 'Little Village',
TRUE ~ community_area
))
merged_dat <- read_csv('Final_Merged_Dataset.csv')
setwd('/Users/joepopop/Desktop/GitHub/mychimyfuture')
merged_dat <- read_csv('Final_Merged_Dataset.csv')
map_dat <- read_sf("https://raw.githubusercontent.com/thisisdaryn/data/master/geo/chicago/Comm_Areas.geojson") %>%
rename(community_area = community) %>%
mutate(
community_area = toupper(community_area),
community_area = case_when(
community_area == 'NEW CITY' ~ 'Back of the Yards',
community_area %in% c('DOUGLAS', 'GRAND BOULEVARD', 'OAKLAND') ~ 'Bronzeville/South Lakefront',
community_area %in% c('WEST GARFIELD PARK', 'EAST GARFIELD PARK') ~ 'GARFIELD PARK',
community_area == 'SOUTH LAWNDALE' ~ 'Little Village',
TRUE ~ community_area
))
# combined data
dat <- merged_dat %>%
left_join(map_dat, by = c('Geographic Cluster Name' = 'community_area'), multiple = 'all') %>%
mutate(
`Geographic Cluster Name` = tools::toTitleCase(tolower(`Geographic Cluster Name`)),
) %>%
mutate_at(vars(contains("Percent") | contains("Unemployment Rate")),
~as.numeric(sub("%|\\$|,", "", .))/100) %>%
janitor::clean_names() %>%
rename_all(~ str_to_title(str_replace_all(., "_", " ")))
leaflet_dat <- dat %>%
group_by(`Geographic Cluster Name`) %>%
mutate(!!input$variable := if_else(input$mean_median, mean(.data[[input$variable]]), median(.data[[input$variable]]))) %>%
select(`Geographic Cluster Name`, !!input$variable, Geometry) %>%
mutate(label = paste0(`Geographic Cluster Name`, ": ", .data[[input$variable]])) %>%
distinct() %>%
ungroup() %>%
st_as_sf()
runApp()
